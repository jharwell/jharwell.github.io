@article{Harwell2018,
author = {Harwell, John and Gini, Maria},
file = {:home/jharwell/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Harwell, Gini - 2018 - Broadening applicability of swarm-robotic foraging through constraint relaxation.pdf:pdf},
isbn = {9781538659748},
journal = {IEEE Int'l Conf. on Simulation, Modeling, and Programming for Autonomous Robots (SIMPAR)},
nomonth = {May},
pages = {116--122},
publisher = {IEEE},
title = {Broadening applicability of swarm-robotic foraging through constraint relaxation},
year = {2018}
}
@article{Harwell2019a,
author = {Harwell, John and Gini, Maria},
journal = {International Joint Conference on Artificial Intelligence (IJCAI)},
nomonth = {August},
publisher = {IJCAI},
title = {Swarm Engineering Through Quantitative Measurement of Swarm Robotic Principles in a 10,000 Robot Swarm},
year = {2019}
}
@inproceedings{Harwell2019b,
  title     = {A Unified Mathematical Approach for Foraging and Construction Systems in a 1,000,000 Robot Swarm},
  author    = {Harwell, John},
  booktitle = {Proceedings of the Twenty-Eighth International Joint Conference on
               Artificial Intelligence, {IJCAI-19}},
  publisher = {International Joint Conferences on Artificial Intelligence Organization},
  pages     = {6438--6439},
  year      = {2019},
  month     = {7},
  doi       = {10.24963/ijcai.2019/908},
  nourl       = {https://doi.org/10.24963/ijcai.2019/908},
}
@article{Harwell2020a,
author = {Harwell, John and Lowmanstone, London and Gini, Maria},
journal = {Autonomous Agents and Multi-Agent Systems (AAMAS)},
nomonth = {May},
publisher = {AAMAS},
title = {Demystifying Emergent Intelligence And Its Effect On Performance In Large Robot Swarms},
year = {2020}
}

@inproceedings{Harwell2020b,
author = {Harwell, John},
title = {A Theoretical Framework for Self-Organized Task Allocation in Large Swarms},
year = {2020},
isbn = {9781450375184},
publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
address = {Richland, SC},
abstract = {Self-organized task allocation is possible with systems designed using the swarm robotic principles of scalability, flexibility, robustness, and emergence. We summarize (1) our derived quantitative measurements of these principles in 10,000 robot swarms, and (2) our task allocation work using stochastic choice and matroids. We propose extensions to our current task allocation methodology using stochastic processes and graph-theoretic topological invariants to provide a unified algorithmic approach to swarm-robotic foraging and construction.},
booktitle = {Proceedings of the 19th International Conference on Autonomous Agents and MultiAgent Systems},
pages = {2191–2192},
numpages = {2},
keywords = {construction, stochastic processes, graph theory, task allocation, swarm robotics, foraging},
location = {Auckland, New Zealand},
series = {AAMAS '20}
}
@misc{Harwell2020c,
      title={Improved Swarm Engineering: Aligning Intuition and Analysis},
      author={John Harwell and Maria Gini},
      year={2020},
      eprint={2012.04144},
      archivePrefix={arXiv},
      primaryClass={cs.RO}
}
@article{Basagaoglu2017a,
abstract = {This paper reports, for the first time, the computational performance of SequenceL for mesoscale simulations of large numbers of particles in a microfluidic device via the lattice-Boltzmann method. The performance of SequenceL simulations was assessed against the optimized serial and parallelized (via OpenMP directives) FORTRAN90 simulations. At present, OpenMP directives were not included in inter-particle and particle–wall repulsive (steric) interaction calculations due to difficulties that arose from inter-iteration dependencies between consecutive iterations of the do-loops. SequenceL simulations, on the other hand, relied on built-in automatic parallelism. Under these conditions, numerical simulations revealed that the parallelized FORTRAN90 outran the performance of SequenceL by a factor of 2.5 or more when the number of particles was 100 or less. SequenceL, however, outran the performance of the parallelized FORTRAN90 by a factor of 1.3 when the number of particles was 300. Our results show that when the number of particles increased by 30-fold, the computational time of SequenceL simulations increased linearly by a factor of 1.5, as compared to a 3.2-fold increase in serial and a 7.7-fold increase in parallelized FORTRAN90 simulations. Considering SequenceL's efficient built-in parallelism that led to a relatively small increase in computational time with increased number of particles, it could be a promising programming language for computationally-efficient mesoscale simulations of large numbers of particles in microfluidic experiments.},
author = {Başağaoğlu, Hakan and Blount, Justin and Blount, Jarred and Nelson, Bryant and Succi, Sauro and Westhart, Phil M. and Harwell, John R.},
doi = {10.1016/j.cpc.2016.12.012},
file = {:home/jharwell/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Başağaoğlu et al. - 2017 - Computational performance of SequenceL coding of the lattice Boltzmann method for multi-particle flow simu.pdf:pdf},
issn = {00104655},
journal = {Computer Physics Communications},
keywords = {Computational methods in fluid dynamics,Hydrodynamics,Lattice-Boltzmann,SequenceL},
pages = {92--99},
title = {{Computational performance of SequenceL coding of the lattice Boltzmann method for multi-particle flow simulations}},
volume = {213},
year = {2017}
}
